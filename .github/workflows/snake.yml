name: Generate Snake

on:
  schedule:
    - cron: "0 */12 * * *"  # Gera a cada 12 horas
  workflow_dispatch:  # Permite disparar manualmente pelo GitHub
  push:
    branches:
      - main  # Dispara quando houver push para a branch 'main'

jobs:
  build:
    runs-on: ubuntu-latest  # Usa o ambiente Ubuntu mais recente

    steps:
      - name: Clone repo
        uses: actions/checkout@v3  # Clona o repositório

      - name: Generate the snake files in './dist/'
        uses: Platane/snk@v3  # Ação para gerar os arquivos da Snake
        id: snake-gif
        with:
          github_user_name: ${{ github.repository_owner }}  # Usa o nome do dono do repositório
          outputs: |
            dist/github-contribution-grid-snake.gif
            dist/github-contribution-grid-snake.svg
          config: |
            {
              "color_scheme": "dark",  # Define que o esquema de cores será 'dark'
              "custom_colors": {
                "background": "#333333",  # Fundo cinza escuro
                "snake": "#1E90FF",  # Cobra azul (cor hexadecimal de um azul mais claro)
                "grid": "#4B4B4B",  # Cor dos quadradinhos de fundo (cinza escuro)
                "head": "#1E90FF"  # Cor da cabeça da cobra (azul)
              }
            }
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Autenticação com o token

      - name: Show build status
        run: git status  # Verifica o status do build

      - name: Push new files to the output branch
        uses: crazy-max/ghaction-github-pages@v3.1.0  # Envia os arquivos para uma branch de saída
        with:
          target_branch: output  # Define a branch de saída
          build_dir: dist  # Direciona os arquivos da pasta 'dist'
          commit_message: Update snake animations  # Mensagem do commit
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Autenticação com o token
